#include <stdio.h>
#include <stdlib.h>
#define MAX 100
void topologicalSort(int n, int adj[MAX][MAX]) {
    int in_degree[MAX] = {0};
    int queue[MAX], front = 0, rear = 0;
    int top_order[MAX];
    int k = 0;
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            if (adj[j][i] == 1) {
                in_degree[i]++;
            }
        }
    }
    for (int i = 0; i < n; i++) {
        if (in_degree[i] == 0) {
            queue[rear++] = i;
        }
    }
    while (front < rear) {
        int u = queue[front++];
        top_order[k++] = u;
        for (int v = 0; v < n; v++) {
            if (adj[u][v] == 1) {
                if (--in_degree[v] == 0) {
                    queue[rear++] = v;
                }
            }
        }
    }
    if (k != n) {
        printf("There exists a cycle in the graph\n");
        return;
    }
    printf("Topological Sort: ");
    for (int i = 0; i < n; i++) {
        printf("%d ", top_order[i]);
    }
    printf("\n");
}
int main() {
    int n;
    int adj[MAX][MAX];
    printf("Enter the number of vertices in the graph: ");
    scanf("%d", &n);
    printf("Enter the adjacency matrix of the graph:\n");
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            scanf("%d", &adj[i][j]);
        }
    }

    topologicalSort(n, adj);

    return 0;
}
