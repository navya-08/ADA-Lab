#include <stdio.h>
int max(int a, int b) {
    return (a > b) ? a : b;
}
void knapsack(int n, int W, int weights[], int profits[]) {
    int i, w;
    int K[n + 1][W + 1];
    for (i = 0; i <= n; i++) {
        for (w = 0; w <= W; w++) {
            if (i == 0 || w == 0)
                K[i][w] = 0;
            else if (weights[i - 1] <= w)
                K[i][w] = max(profits[i - 1] + K[i - 1][w - weights[i - 1]], K[i - 1][w]);
            else
                K[i][w] = K[i - 1][w];
        }
    }
    printf("Knapsack Table:\n");
    for (i = 0; i <= n; i++) {
        for (w = 0; w <= W; w++) {
            printf("%d\t", K[i][w]);
        }
        printf("\n");
    }
    int res = K[n][W];
    printf("\nMaximum Profit: %d\n", res);
    printf("Selected items (index): ");


    w = W;
    for (i = n; i > 0 && res > 0; i--) {
        if (res == K[i - 1][w])
            continue;
        else {
            printf("%d ", i - 1);
            res = res - profits[i - 1];
            w = w - weights[i - 1];
        }    }
    printf("\n");}
int main() {
    int n = 4;
    int weights[] = {2, 3, 4, 5}; 
    int profits[] = {3, 4, 5, 6}; 
    int W = 5;
    knapsack(n, W, weights, profits);
    return 0;
}
